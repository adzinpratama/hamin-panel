$types: (
  primary: inverted,
  info: primary,
  success: inverted,
  warning: primary,
  danger: inverted,
);

.btn-alg {
  align-items: center;
  appearance: none;
  background-color: var(--background-secondary);
  border-radius: 4px;
  border-width: 0;
  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,
    rgba(45, 35, 66, 0.3) 0 7px 13px -3px,
    var(--background-element) 0 -3px 0 inset;
  box-sizing: border-box;
  //   color: #36395a;
  cursor: pointer;
  display: inline-flex;
  //   font-family: "JetBrains Mono", monospace;
  justify-content: center;
  line-height: 1;
  list-style: none;
  overflow: hidden;
  //   height: 48px;
  //   padding-left: 16px;
  //   padding-right: 16px;
  padding: 0.8rem 1rem;
  position: relative;
  text-align: left;
  text-decoration: none;
  transition: box-shadow 0.15s, transform 0.15s;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  white-space: nowrap;
  will-change: box-shadow, transform;
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--text-primary);

  &:focus {
    box-shadow: var(--background-element) 0 0 0 1.5px inset,
      rgba(45, 35, 66, 0.4) 0 2px 4px, rgba(45, 35, 66, 0.3) 0 7px 13px -3px,
      var(--background-element) 0 -3px 0 inset;
  }

  &:hover {
    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,
      rgba(45, 35, 66, 0.3) 0 7px 13px -3px,
      var(--background-element) 0 -3px 0 inset;
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: var(--background-element) 0 3px 7px inset;
    transform: translateY(2px);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  @each $type, $text in $types {
    &.btn-#{$type} {
      box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,
        rgba(45, 35, 66, 0.3) 0 7px 13px -3px, var(--#{type}) 0 -3px 0 inset;
    }
  }

  &:has(.iconify) {
    display: flex;
    gap: 0.5rem;
  }

  &.btn-icrounded {
    border-radius: 50%;
    padding: 1rem;
  }
  &.btn-rounded {
    border-radius: 24px;
  }
}

.btn-goog {
  align-items: center;
  appearance: none;
  background-color: var(--background-secondary);
  border-radius: 24px;
  border-style: none;
  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 5px -1px,
    rgba(0, 0, 0, 0.14) 0 6px 10px 0, rgba(0, 0, 0, 0.12) 0 1px 18px 0;
  box-sizing: border-box;
  color: var(--text-primary);
  cursor: pointer;
  display: inline-flex;
  fill: currentcolor;
  //   font-family: "Google Sans", Roboto, Arial, sans-serif;
  font-size: 0.9rem;
  font-weight: 550;
  opacity: 0.95;
  justify-content: center;
  letter-spacing: 0.25px;
  line-height: normal;
  max-width: 100%;
  overflow: visible;
  //   padding: 2px 24px;
  padding: 0.8rem 1rem;
  position: relative;
  text-align: center;
  text-transform: none;
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),
    opacity 15ms linear 30ms, transform 270ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: auto;
  will-change: transform, opacity;
  z-index: 0;

  .btn-goog:hover {
    background: #f6f9fe;
    // color: #174ea6;
  }

  &:active {
    box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%),
      0 8px 12px 6px rgb(60 64 67 / 15%);
    outline: none;
  }

  &:focus {
    outline: none;
    // border: 2px solid #4285f4;
    opacity: 1;
  }

  &:not(:disabled) {
    box-shadow: rgba(60, 64, 67, 0.3) 0 1px 3px 0,
      rgba(60, 64, 67, 0.15) 0 4px 8px 3px;
  }

  &:not(:disabled):hover {
    box-shadow: rgba(60, 64, 67, 0.3) 0 2px 3px 0,
      rgba(60, 64, 67, 0.15) 0 6px 10px 4px;
  }

  &:not(:disabled):focus {
    box-shadow: rgba(60, 64, 67, 0.3) 0 1px 3px 0,
      rgba(60, 64, 67, 0.15) 0 4px 8px 3px;
  }

  &:not(:disabled):active {
    box-shadow: rgba(60, 64, 67, 0.3) 0 4px 4px 0,
      rgba(60, 64, 67, 0.15) 0 8px 12px 6px;
  }

  &:disabled {
    box-shadow: rgba(60, 64, 67, 0.3) 0 1px 3px 0,
      rgba(60, 64, 67, 0.15) 0 4px 8px 3px;
  }

  &:has(.iconify) {
    gap: 0.4rem;
  }
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@each $type, $text in $types {
  .btn-#{$type} {
    background-color: var(--#{$type});
    color: var(--text-#{$text});
  }
}
